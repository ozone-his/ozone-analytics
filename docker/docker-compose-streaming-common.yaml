version: '3.8'
services:
  zookeeper:
    networks:
      ozone-analytics:
    restart: on-failure
    image: debezium/zookeeper:${DEBEZIUM_VERSION}
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
    volumes:
      - zookeeper-data:/zookeeper/data
      - zookeeper-txns:/zookeeper/txns
    labels: 
      kompose.service.type: clusterip
  kafka:
    restart: on-failure
    image: debezium/kafka:${DEBEZIUM_VERSION}
    networks:
      ozone-analytics:
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      - CLUSTER_ID=5Yr1SIgYQz-b-dgRabWx4g
      - BROKER_ID=1
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_LISTENERS=PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093,PLAINTEXT_HOST://0.0.0.0:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
    volumes:
      - kafka-data:/kafka/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/bin/bash",
          "-c",
          "./bin/kafka-topics.sh --bootstrap-server 127.0.0.1:9092 --list"
        ]
  kafka-setup:
    networks:
      ozone-analytics:
    restart: on-failure
    image: debezium/kafka:${DEBEZIUM_VERSION}
    command:
      - /bin/bash
      - -c
      - |
        IFS=',' read -ra topics <<< "$$TOPICS"
        for topic in $${topics[@]}
          do
            echo "Creating topic $$topic..."
            ./bin/kafka-topics.sh --create --topic $$topic --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka:9092
            ./bin/kafka-configs.sh --bootstrap-server=kafka:9092  --entity-type topics --entity-name $$topic --alter --add-config retention.ms=31556736000
        done
    environment:
     - TOPICS=${CREATE_TOPICS}
    depends_on:
      - kafka
  connect:
    restart: on-failure
    image: debezium/connect:${DEBEZIUM_VERSION}
    networks:
      ozone-analytics:
    ports:
      - 8383:8083
    volumes:
      - ./debezium-connect/jars/TimestampConverter-1.2.4-SNAPSHOT.jar:/kafka/connect/debezium-connector-mysql/TimestampConverter-1.2.4-SNAPSHOT.jar
      - ./debezium-connect/jars/TimestampConverter-1.2.4-SNAPSHOT.jar:/kafka/connect/debezium-connector-postgres/TimestampConverter-1.2.4-SNAPSHOT.jar
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
      - CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_CONFIG_PROVIDERS=file
      - CONNECT_CONFIG_PROVIDERS_FILE_CLASS=org.apache.kafka.common.config.provider.FileConfigProvider
      - CONNECT_MYSQL_HOSTNAME=${CONNECT_MYSQL_HOSTNAME:-mysql}
      - CONNECT_MYSQL_USERNAME=${CONNECT_MYSQL_USERNAME:-root}
      - CONNECT_MYSQL_PASSWORD=${CONNECT_MYSQL_PASSWORD:-${CONNECT_MYSQL_PASSWORD}}
      - CONNECT_MYSQL_PORT=${CONNECT_MYSQL_PORT:-${CONNECT_MYSQL_PORT}}
      - CONNECT_MYSQL_SERVER_ID=37991
      - CONNECT_MYSQL_SERVER_NAME=openmrs
      - CONNECT_MYSQL_INCLUDE_LIST=openmrs
      - CONNECT_TABLE_EXCLUDE_LIST=openmrs.audit_log
      - CONNECT_MYSQL_HISTROY_TOPIC=dbhistory.openmrs
      - CONNECT_MYSQL_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - CONNECT_ODOO_DB_HOSTNAME=${CONNECT_ODOO_DB_HOSTNAME:-postgresql}
      - CONNECT_ODOO_DB_USERNAME=${CONNECT_ODOO_DB_USERNAME:-${POSTGRES_USER}}
      - CONNECT_ODOO_DB_PASSWORD=${CONNECT_ODOO_DB_PASSWORD:-${POSTGRES_PASSWORD}}
      - CONNECT_ODOO_DB_PORT=${CONNECT_ODOO_DB_PORT:-5432}
      - CONNECT_ODOO_DB_SERVER_NAME=odoo
      - CONNECT_ODOO_DB_INCLUDE_LIST=odoo

  connect-setup:
    restart: on-failure
    image: mekomsolutions/ozone-analytics-setup-connect
    networks:
      ozone-analytics:
    depends_on:
      - connect
    environment:
      - CONNECT_HOST=connect
      - SOURCE_DB_HOST=${CONNECT_MYSQL_HOSTNAME}
      - SOURCE_DB_PORT=${CONNECT_MYSQL_PORT}
      - ODOO_DB_HOST=${ODOO_DB_HOST:-${CONNECT_ODOO_DB_HOSTNAME}}
      - ODOO_DB_PORT=${ODOO_DB_PORT:-${CONNECT_ODOO_DB_PORT}}
      - FLINK_JOBMANAGER_HOST=jobmanager
  jobmanager:
    networks:
      ozone-analytics:
    restart: on-failure
    image: mekomsolutions/ozone-flink-jobs
    ports:
      - "8084:8081"
    depends_on:
       odoo-replica-identity-migration:
         condition: service_completed_successfully
       analytics-migration:
          condition: service_completed_successfully
       zookeeper:
         condition: service_started
       kafka:
         condition: service_started
       kafka-setup:
         condition: service_completed_successfully
    labels: 
      - kompose.service.group=flink-manager
    environment:
      - ANALYTICS_SOURCE_TABLES_PATH=/analytics/source-tables
      - ANALYTICS_QUERIES_PATH=/analytics/queries
      - ANALYTICS_DB_NAME=${ANALYTICS_DB_NAME}
      - ANALYTICS_DB_USER=${ANALYTICS_DB_USER}
      - ANALYTICS_DB_PASSWORD=${ANALYTICS_DB_PASSWORD}
      - ANALYTICS_DB_HOST=${ANALYTICS_DB_HOST}
      - ANALYTICS_DB_PORT=${ANALYTICS_DB_PORT}
      - ANALYTICS_KAFKA_URL=${ANALYTICS_KAFKA_URL}
      - OPENMRS_DB_NAME=${OPENMRS_DB_NAME}
      - OPENMRS_DB_USER=${OPENMRS_DB_USER}
      - OPENMRS_DB_PASSWORD=${OPENMRS_DB_PASSWORD}
      - OPENMRS_DB_HOST=${OPENMRS_DB_HOST}
      - OPENMRS_DB_PORT=${OPENMRS_DB_PORT}
      - ODOO_DB_NAME=${ODOO_DB_NAME:-odoo}
      - ODOO_DB_USER=${ODOO_DB_USER:-postgres}
      - ODOO_DB_PASSWORD=${ODOO_DB_PASSWORD:-password}
      - ODOO_DB_HOST=${ODOO_DB_HOST:-postgresql}
      - ODOO_DB_PORT=${ODOO_DB_PORT:-5432}
      - ZOOKEEPER_URL=${ZOOKEEPER_URL}
      - ANALYTICS_CONFIG_FILE_PATH=/analytics/config.yaml
    volumes:
      - flink-shared-data:/tmp
      - ./data:/data
      - ${ANALYTICS_SOURCE_TABLES_PATH}:/analytics/source-tables
      - ${ANALYTICS_QUERIES_PATH}:/analytics/queries
      - ${ANALYTICS_CONFIG_FILE_PATH}:/analytics/config.yaml
volumes:
   flink-shared-data: ~
   zookeeper-data: ~
   kafka-data: ~
   zookeeper-txns: ~
networks:
  ozone-analytics:
